name: Deploy to Hostinger

on:
  push:
    branches: [main]
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'
      - '**/*.json'
      - '**/*.xml'
      - '**/*.txt'
      - '**/*.php'
      - '.htaccess'
      - 'IMG/**'
      - 'icons/**'
      - 'api/**'
      - 'assets/**'
      - 'images/**'
      - '.github/workflows/hostinger-deploy.yml'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy via SFTP
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: hostinger-deploy-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp

      - name: Generate version file
        run: |
          echo "${{ github.sha }} $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > version.txt
          echo "üìù Generated version.txt: $(cat version.txt)"

      - name: Deploy to Hostinger
        env:
          HOST: ${{ secrets.HOSTINGER_FTP_SERVER }}
          USER: ${{ secrets.HOSTINGER_FTP_USERNAME }}
          PASS: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        run: |
          echo "üöÄ Starting deployment..."

          lftp -u "$USER","$PASS" -p 65002 sftp://$HOST <<'EOF'
          set sftp:auto-confirm yes
          set net:max-retries 3
          set net:timeout 30
          set net:reconnect-interval-base 5
          set xfer:clobber on

          cd /home/u476428393/public_html/

          # ================================
          # ONE-TIME CLEANUP  (REMOVE AFTER SUCCESSFUL RUN)
          # Delete junk that previously leaked to prod
          rm -f .DS_Store deploy.sh || :
          rm -f *.md || :
          rm -f IMG/*.md api/*.md icons/*.md || :
          # ================================

          # Deploy
          mirror -Rnev --delete --no-empty-dirs --parallel=4 \
            -x '(^|/)\.(git|github|vscode)(/|$)' \
            -x '(^|/)(backups|logs)(/|$)' \
            -X '.DS_Store' \
            -X '*.md' \
            -X 'deploy*.sh' \
            -X '.deploy-trigger' \
            -X 'docs/**' \
            -X '.well-known/**' \
            . .

          bye
          EOF

          echo "‚úÖ Deployment complete"

      - name: Verify live site updated
        run: |
          echo "‚è≥ Waiting 5 seconds for propagation..."
          sleep 5

          echo "üîç Verifying version.txt matches this build..."
          URL="https://chicagosmoney.com/version.txt?__=${{ github.run_id }}"
          curl -sS -D /tmp/headers.txt -H 'Cache-Control: no-cache' "$URL" | tee /tmp/live_version.txt

          echo ""
          echo "---- Response headers ----"
          cat /tmp/headers.txt

          test -s /tmp/live_version.txt || { echo "‚ùå version.txt missing"; exit 1; }
          grep -q "${{ github.sha }}" /tmp/live_version.txt || { echo "‚ùå Live version does not match build SHA"; cat /tmp/live_version.txt; exit 1; }

          echo "‚úÖ Live version matches: ${{ github.sha }}"

          echo ""
          echo "üîç Fetching live homepage..."
          curl -sS https://chicagosmoney.com/ | tee /tmp/live.html
          grep -q '<title>Chicago' /tmp/live.html || { echo "‚ùå Homepage not updated"; head -c 500 /tmp/live.html; exit 1; }
          echo "‚úÖ Homepage verified"
