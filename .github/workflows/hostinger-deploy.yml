name: Deploy to Hostinger

on:
  push:
    branches: [main]
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'
      - '**/*.json'
      - '**/*.xml'
      - '**/*.txt'
      - '**/*.php'
      - '.htaccess'
      - 'IMG/**'
      - 'icons/**'
      - 'api/**'
      - 'assets/**'
      - 'images/**'
      - '.github/workflows/hostinger-deploy.yml'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy via SFTP
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: hostinger-deploy-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp

      # Optional: enable this to see what would upload/delete
      # - name: Dry-run (mirror -n)
      #   env:
      #     HOST: ${{ secrets.HOSTINGER_FTP_SERVER }}
      #     USER: ${{ secrets.HOSTINGER_FTP_USERNAME }}
      #     PASS: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
      #   run: |
      #     lftp -u "$USER","$PASS" -p 65002 sftp://$HOST <<EOF
      #     set sftp:auto-confirm yes
      #     set net:max-retries 3
      #     set net:timeout 30
      #     set net:reconnect-interval-base 5
      #     set xfer:clobber on
      #     cd /home/u476428393/public_html/
      #     mirror -Rnev --dry-run \
      #       --exclude-glob .git \
      #       --exclude-glob .github \
      #       --exclude-glob .gitignore \
      #       --exclude-glob .DS_Store \
      #       --exclude-glob '*.md' \
      #       --exclude-glob 'deploy*.sh' \
      #       --exclude-glob '.claude' \
      #       --exclude-glob 'docs' \
      #       --exclude-glob '.deploy-trigger' \
      #       --exclude-glob 'backups' \
      #       --exclude-glob 'logs' \
      #       --exclude-glob '.well-known' \
      #       . .
      #     bye
      #     EOF

      - name: Deploy to Hostinger
        env:
          HOST: ${{ secrets.HOSTINGER_FTP_SERVER }}
          USER: ${{ secrets.HOSTINGER_FTP_USERNAME }}
          PASS: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        run: |
          echo "üöÄ Starting deployment..."

          lftp -u "$USER","$PASS" -p 65002 sftp://$HOST <<'EOF'
          set sftp:auto-confirm yes
          set net:max-retries 3
          set net:timeout 30
          set net:reconnect-interval-base 5
          set xfer:clobber on

          cd /home/u476428393/public_html/

          mirror -Rnev --delete --no-empty-dirs --parallel=4 \
            --exclude-glob '.git' \
            --exclude-glob '.git/**' \
            --exclude-glob '.github' \
            --exclude-glob '.github/**' \
            --exclude-glob '.vscode' \
            --exclude-glob '.vscode/**' \
            --exclude-glob '.gitignore' \
            --exclude-glob '.DS_Store' \
            --exclude-glob '*.md' \
            --exclude-glob 'deploy*.sh' \
            --exclude-glob '.claude' \
            --exclude-glob '.claude/**' \
            --exclude-glob 'docs' \
            --exclude-glob 'docs/**' \
            --exclude-glob '.deploy-trigger' \
            --exclude-glob 'backups' \
            --exclude-glob 'backups/**' \
            --exclude-glob 'logs' \
            --exclude-glob 'logs/**' \
            --exclude-glob '.well-known' \
            --exclude-glob '*.bak' \
            . .

          cls -l
          cat .htaccess | sed -n '1,20p'

          bye
EOF

          echo "‚úÖ Deployment complete"

      - name: Verify live site updated
        run: |
          echo "‚è≥ Waiting 10 seconds for changes to propagate..."
          sleep 10

          echo "üîç Fetching live homepage..."
          curl -sS https://chicagosmoney.com/ | tee /tmp/live.html

          echo ""
          echo "‚úÖ Checking for index.html markers..."

          # Check for unique string from new index.html (adjust this to match your actual content)
          if grep -q '<title>Chicago' /tmp/live.html; then
            echo "‚úÖ SUCCESS: Live site is serving index.html"
          else
            echo "‚ùå FAILURE: Live site may not be serving updated index.html"
            echo "First 500 chars of response:"
            head -c 500 /tmp/live.html
            exit 1
          fi
